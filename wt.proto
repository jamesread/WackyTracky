syntax = "proto3";

option go_package = "gen/grpc";

import "google/api/annotations.proto";

message List {
	uint64 ID = 1;
	string Title = 2;
	uint64 CountTasks = 3;
}

message GetListsRequest {}
message GetListsResponse {
	repeated List Lists = 1;
}

message CreateListRequest {
	string Title = 1;
}

message CreateListResponse{}

message CreateTaskRequest {
	string Content = 1;
}

message CreateTaskResponse {
}

message Tag {
	uint64 ID = 1;
	string Title = 2;
}

message TagRequest {}
message TagResponse {} 

message GetTagsRequest{}
message GetTagsResponse{
	repeated Tag Tags = 1;
}

message Task {
	uint64 ID = 1;
	string Content = 2;
	uint64 ParentId = 3;
	string ParentType = 4;
}

message ListTasksRequest {
	uint64 ListID = 1;
}

message ListTasksResponse {
	repeated Task Tasks = 1;
}

message UpdateList {}
message UpdateListRequest {}
message UpdateListResponse {}

message InitRequest {}
message InitResponse {
	string Wallpaper = 1;
}

message VersionRequest {}
message VersionResponse {
	string version = 1;
	string commit = 2;
	string date = 3;
}

service WackyTrackyClientApi {
	rpc Version(VersionRequest) returns (VersionResponse) {
		option (google.api.http) = {
			get: "/api/Version"
		};
	}

	rpc Init(InitRequest) returns (InitResponse) {
		option (google.api.http) = {
			get: "/api/Init"
		};
	}

	rpc GetLists(GetListsRequest) returns (GetListsResponse) {
		option (google.api.http) = {
			get: "/api/ListLists"
		};
	}

	rpc ListTasks(ListTasksRequest) returns (ListTasksResponse) {
		option (google.api.http) = {
			get: "/api/Task/List"
		};
	}


	rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {
		option (google.api.http) = {
			post: "/api/Task/Create"
			body: "*"
		};
	}

	rpc CreateList(CreateListRequest) returns (CreateListResponse) {
		option (google.api.http) = {
			post: "/api/List/Create"
			body: "*"
		};
	}

	rpc Tag(TagRequest) returns (TagResponse) {
		option (google.api.http) = {
			post: "/api/Tag"
			body: "*"
		};
	}

	rpc UpdateList(UpdateListRequest) returns (UpdateListResponse) {
		option (google.api.http) = {
			post: "/api/List/Update"
			body: "*"
		};
	}

	rpc GetTags(GetTagsRequest) returns (GetTagsResponse) {
		option (google.api.http) = {
			get: "/api/ListTags"
		};

	}


}
